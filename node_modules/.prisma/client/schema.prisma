generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      =  env("DATABASE_URL")
}

model User {
    id String @id @default(uuid()) 
    name String?
    email String @unique
    password String?
    groupId String
    group Group @relation(fields: [groupId], references:[id])   
    credentials FederatedCredential[]
}

model Group {
    id String @id @default(uuid())
    name String @unique
    users User[]
    columns Column[]
}

model Column {
    id String @id @default(uuid())    
    name String @unique 
    index Int
    groupId String
    group Group @relation(fields: [groupId], references:[id])   
    tasks Task[]
}

model Task {
    id String @id @default(uuid())
    name String
    prevId String?  @unique
    prevTask Task?  @relation("linkedList", fields: [prevId], references: [id])
    nextTask Task?  @relation("linkedList")
    columnId String
    column Column @relation(fields: [columnId], references:[id])   
    list Item[]
    text String?
}

model Item {
   id String @id @default(uuid())
   text String
   taskId String
   task Task @relation(fields: [taskId], references:[id])    
}

model FederatedCredential {
  userId String
  user User @relation(fields: userId, references: id, onDelete: Cascade)
  provider String
  socialId String

  @@id([provider, socialId])
}